version: '3.8'

services:
  # MongoDB Database
  mongo:
    image: mongo:7.0
    container_name: plexix-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: plexix
      MONGO_INITDB_ROOT_PASSWORD: plexix123
      MONGO_INITDB_DATABASE: plexix
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - plexix-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PlexiX Backend Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: plexix-backend
    restart: unless-stopped
    environment:
      # Aptos Configuration
      APTOS_RPC_URL: ${APTOS_RPC_URL:-https://fullnode.testnet.aptoslabs.com/v1}
      VAULT_MODULE_ADDRESS: ${VAULT_MODULE_ADDRESS}
      PRIVATE_KEY: ${PRIVATE_KEY}
      
      # Authentication
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      
      # Database
      MONGO_URI: mongodb://plexix:plexix123@mongo:27017/plexix?authSource=admin
      
      # Server
      PORT: 4000
      NODE_ENV: ${NODE_ENV:-production}
      
      # Keeper Configuration
      KEEPER_POLL_INTERVAL_SECS: ${KEEPER_POLL_INTERVAL_SECS:-30}
      INDEXER_POLL_INTERVAL_SECS: ${INDEXER_POLL_INTERVAL_SECS:-10}
      SNAPSHOT_INTERVAL_MINS: ${SNAPSHOT_INTERVAL_MINS:-5}
      
      # Rate Limiting
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-900000}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-100}
      
      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-info}
      
      # Vault Configuration
      ASSET_TOKEN: ${ASSET_TOKEN:-USDC}
      REBALANCE_COOLDOWN: ${REBALANCE_COOLDOWN:-3600}
      DEFAULT_HEDGE_PERCENT: ${DEFAULT_HEDGE_PERCENT:-30}
      DEFAULT_FARM_PERCENT: ${DEFAULT_FARM_PERCENT:-70}
      REBALANCE_THRESHOLD_PERCENT: ${REBALANCE_THRESHOLD_PERCENT:-5}
      
      # Feature Flags
      ENABLE_KEEPER: ${ENABLE_KEEPER:-true}
      ENABLE_INDEXER: ${ENABLE_INDEXER:-true}
      KEEPER_MODE: ${KEEPER_MODE:-stub}
    ports:
      - "4000:4000"
    volumes:
      - ./logs:/app/logs
    networks:
      - plexix-network
    depends_on:
      mongo:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: plexix-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - plexix-network
    depends_on:
      - backend
    profiles:
      - production

volumes:
  mongo_data:
    driver: local

networks:
  plexix-network:
    driver: bridge
